// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.intera.roostrap.web;

import com.iancodes.collegesailors.model.College;
import com.iancodes.collegesailors.model.Fleet;
import com.iancodes.collegesailors.model.FleetScore;
import com.iancodes.collegesailors.model.Race;
import com.iancodes.collegesailors.model.Regatta;
import com.iancodes.collegesailors.model.Sailor;
import com.iancodes.collegesailors.model.Team;
import com.intera.roostrap.domain.City;
import com.intera.roostrap.domain.Country;
import com.intera.roostrap.domain.Person;
import com.intera.roostrap.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<College, String> ApplicationConversionServiceFactoryBean.getCollegeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.College, java.lang.String>() {
            public String convert(College college) {
                return new StringBuilder().append(college.getCollegeName()).append(' ').append(college.getBurgee()).toString();
            }
        };
    }
    
    public Converter<String, College> ApplicationConversionServiceFactoryBean.getIdToCollegeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.College>() {
            public com.iancodes.collegesailors.model.College convert(java.lang.String id) {
                return College.findCollege(id);
            }
        };
    }
    
    public Converter<Fleet, String> ApplicationConversionServiceFactoryBean.getFleetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.Fleet, java.lang.String>() {
            public String convert(Fleet fleet) {
                return new StringBuilder().append(fleet.getFleetName()).toString();
            }
        };
    }
    
    public Converter<String, Fleet> ApplicationConversionServiceFactoryBean.getIdToFleetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.Fleet>() {
            public com.iancodes.collegesailors.model.Fleet convert(java.lang.String id) {
                return Fleet.findFleet(id);
            }
        };
    }
    
    public Converter<FleetScore, String> ApplicationConversionServiceFactoryBean.getFleetScoreToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.FleetScore, java.lang.String>() {
            public String convert(FleetScore fleetScore) {
                return new StringBuilder().append(fleetScore.getPlace()).toString();
            }
        };
    }
    
    public Converter<String, FleetScore> ApplicationConversionServiceFactoryBean.getIdToFleetScoreConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.FleetScore>() {
            public com.iancodes.collegesailors.model.FleetScore convert(java.lang.String id) {
                return FleetScore.findFleetScore(id);
            }
        };
    }
    
    public Converter<Race, String> ApplicationConversionServiceFactoryBean.getRaceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.Race, java.lang.String>() {
            public String convert(Race race) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<String, Race> ApplicationConversionServiceFactoryBean.getIdToRaceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.Race>() {
            public com.iancodes.collegesailors.model.Race convert(java.lang.String id) {
                return Race.findRace(id);
            }
        };
    }
    
    public Converter<Regatta, String> ApplicationConversionServiceFactoryBean.getRegattaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.Regatta, java.lang.String>() {
            public String convert(Regatta regatta) {
                return new StringBuilder().append(regatta.getRegattaDate()).append(' ').append(regatta.getRegattaName()).append(' ').append(regatta.getBoat()).append(' ').append(regatta.getScoring()).toString();
            }
        };
    }
    
    public Converter<String, Regatta> ApplicationConversionServiceFactoryBean.getIdToRegattaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.Regatta>() {
            public com.iancodes.collegesailors.model.Regatta convert(java.lang.String id) {
                return Regatta.findRegatta(id);
            }
        };
    }
    
    public Converter<Sailor, String> ApplicationConversionServiceFactoryBean.getSailorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.Sailor, java.lang.String>() {
            public String convert(Sailor sailor) {
                return new StringBuilder().append(sailor.getSailorName()).append(' ').append(sailor.getGraduationYear()).toString();
            }
        };
    }
    
    public Converter<String, Sailor> ApplicationConversionServiceFactoryBean.getIdToSailorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.Sailor>() {
            public com.iancodes.collegesailors.model.Sailor convert(java.lang.String id) {
                return Sailor.findSailor(id);
            }
        };
    }
    
    public Converter<Team, String> ApplicationConversionServiceFactoryBean.getTeamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.iancodes.collegesailors.model.Team, java.lang.String>() {
            public String convert(Team team) {
                return new StringBuilder().append(team.getCreated()).toString();
            }
        };
    }
    
    public Converter<String, Team> ApplicationConversionServiceFactoryBean.getIdToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.iancodes.collegesailors.model.Team>() {
            public com.iancodes.collegesailors.model.Team convert(java.lang.String id) {
                return Team.findTeam(id);
            }
        };
    }
    
    public Converter<City, String> ApplicationConversionServiceFactoryBean.getCityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.intera.roostrap.domain.City, java.lang.String>() {
            public String convert(City city) {
                return new StringBuilder().append(city.getName()).toString();
            }
        };
    }
    
    public Converter<String, City> ApplicationConversionServiceFactoryBean.getIdToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.intera.roostrap.domain.City>() {
            public com.intera.roostrap.domain.City convert(java.lang.String id) {
                return City.findCity(id);
            }
        };
    }
    
    public Converter<String, Country> ApplicationConversionServiceFactoryBean.getIdToCountryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.intera.roostrap.domain.Country>() {
            public com.intera.roostrap.domain.Country convert(java.lang.String id) {
                return Country.findCountry(id);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.intera.roostrap.domain.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getName()).append(' ').append(person.getBirthday()).toString();
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.intera.roostrap.domain.Person>() {
            public com.intera.roostrap.domain.Person convert(java.lang.String id) {
                return Person.findPerson(id);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCollegeToStringConverter());
        registry.addConverter(getIdToCollegeConverter());
        registry.addConverter(getFleetToStringConverter());
        registry.addConverter(getIdToFleetConverter());
        registry.addConverter(getFleetScoreToStringConverter());
        registry.addConverter(getIdToFleetScoreConverter());
        registry.addConverter(getRaceToStringConverter());
        registry.addConverter(getIdToRaceConverter());
        registry.addConverter(getRegattaToStringConverter());
        registry.addConverter(getIdToRegattaConverter());
        registry.addConverter(getSailorToStringConverter());
        registry.addConverter(getIdToSailorConverter());
        registry.addConverter(getTeamToStringConverter());
        registry.addConverter(getIdToTeamConverter());
        registry.addConverter(getCityToStringConverter());
        registry.addConverter(getIdToCityConverter());
        registry.addConverter(getCountryToStringConverter());
        registry.addConverter(getIdToCountryConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
